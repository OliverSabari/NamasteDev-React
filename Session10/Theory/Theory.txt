

Explore all the ways of writing css.

Different ways of writing css :
1) Normal Native Css 
2) SCSS / SASS
3) Inline Css 
4) Component Libraries  -  Material UI , Base UI, Ant, Chakra ,Bootstrap
7) Styled Component
6) Tailwind CSS framework 

-----------------------------------------------------------------------------------------------------------

How do we configure tailwind?

For each framework/Build tools, there are different steps to configure the tailwind,

Below are the steps for parcel to configure the tailwind,

=>Install tailwind css using below lines,

npm install -D tailwindcss postcss

postcss is the one that compiles tailwind and transforms it to static css.

=> Initialize tailwind css

npx tailwindcss init

=> Configure postcss 

create new file ".postcssrc" and put the below configuration,
{
  "plugins": {
    "tailwindcss": {}
  }
}

=>Configure template path inside the tailwind.config.js:

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{html,js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

=> In index.css add the tailwind directive to css with below lines,

@tailwind base;
@tailwind components;
@tailwind utilities;

--------------------------------------------------------------------------------------------------------

In tailwing.config.js what does all the keys mean ( content,theme,extends,plugins)?

tailwind.config.js is the file which will be used to customize the defalut configuration. There are diferent class and properties which we can modify or add.

Content : inside content property we need to specify the paths of HTML,js etc.. files which is using the tailwind class names.

Theme : We can set the themes by customizing color, fontsize,bordersize etcc... which will totally override the default theme that is provided by tailwind.

Extends : Unlike theme, extend will just extend(add) new properties to the exisiting tailwind properties.

Plugins : The plugins section allows you to register plugins with Tailwind that can be used to generate extra utilities, components,
base styles, or custom variants.

Refer for more : https://tailwindcss.com/docs/configuration
----------------------------------------------------------------------------------------------------

Why do we have .postcssrc file ?


.postcssrc file configuraiton tells bundler(like parcel) that in our project we have tailwind class names so while bundling things up compile the tailwind 
css and transfer it into normal css. This is the use of .postcssrc file.

--------------------------------------------------------------------------------------------------------